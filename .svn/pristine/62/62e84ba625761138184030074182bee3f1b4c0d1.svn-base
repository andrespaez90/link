apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

ext.REPO_ARTIFACTID = 'ble'
ext.REPO_VERSION = versions.ble
apply from: '../repo.gradle'

android {
    compileSdkVersion android_sdk.compile
    buildToolsVersion android_sdk.tool

    defaultConfig {
        minSdkVersion android_sdk.min
        targetSdkVersion android_sdk.target
        versionCode 1
        versionName REPO_VERSION

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

static def getJarName(version) {
    return String.format("%s_v%s.jar", "omni_ble_sdk", version)
}

// 构建jar包
//task makeJar(type: Jar) { // 如果要包含第三方jar包, type: Jar
//    delete('build/libs/' + getJarName(REPO_VERSION)) // 删除旧的jar
//    from('build/intermediates/packaged-classes/release/')
//    from(project.zipTree("libs/nordicsemi_ble_v2.1.1.jar"))
//    into('build/libs')
//    include('classes.jar')
//    rename('classes.jar', getJarName(REPO_VERSION))
//}
task makeJar(type: Jar) {
    delete('build/libs/' + getJarName(REPO_VERSION))
    archiveName = getJarName(REPO_VERSION)
    from(project.zipTree('build/intermediates/packaged-classes/release/classes.jar'))
    from(project.zipTree("libs/nordicsemi_ble_v2.1.1.jar"))
    destinationDir = file('build/libs')
}
makeJar.dependsOn(build)
// 控制台运行gradlew makeJar
